<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>The Plan of Salvation</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Crimson+Text:wght@400;600;700&family=Lora:wght@400;500&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Lora', serif;
            background-color: #f0f4f8;
        }
        .title-font {
            font-family: 'Crimson Text', serif;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(15px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .stage-card { display: none; }
        .stage-card.active {
            display: block;
            animation: fadeIn 0.5s ease-out forwards;
        }

        /* --- Snaking Timeline Styles --- */
        .path-container {
            position: relative;
            width: 100%;
            height: 180px; /* Increased height for better spacing */
        }
        .path-segment {
            position: absolute;
            background-color: #cbd5e1; /* slate-300 */
            z-index: 1;
        }
        .stage-point {
            position: absolute;
            transform: translate(-50%, -50%);
            width: 16px;
            height: 16px;
            background-color: #94a3b8;
            border-radius: 50%;
            z-index: 3; /* Points above lines */
            transition: all 0.5s ease-in-out;
        }
        .stage-point.active {
            background-color: #38bdf8;
            transform: translate(-50%, -50%) scale(1.5);
            box-shadow: 0 0 15px rgba(56, 189, 248, 0.7);
        }
        /* Alternating vertical positions */
        .stage-point.pos-down { top: 120px; }
        .stage-point.pos-up { top: 60px; }

        .stage-label {
            position: absolute;
            transform: translateX(-50%);
            font-size: 0.7rem;
            color: #475569;
            text-align: center;
            width: 80px;
            line-height: 1.2;
            z-index: 2;
        }
        /* Alternating label positions */
        .stage-label.pos-down { top: 140px; }
        .stage-label.pos-up { top: 20px; }

        #person-icon {
            position: absolute;
            transform: translate(-50%, -50%);
            width: 40px;
            height: 40px;
            z-index: 4; /* Person icon on top */
            transition: all 0.6s cubic-bezier(0.68, -0.55, 0.27, 1.55);
            color: #0f172a;
        }
        #person-icon.pos-down { top: 120px; }
        #person-icon.pos-up { top: 60px; }
        /* --- End Snaking Timeline Styles --- */


        /* --- Stage Icon Styles --- */
        .stage-icon {
            width: 64px;
            height: 64px;
            color: #38bdf8; /* sky-400 */
            margin-bottom: 1rem;
        }

        /* --- Degrees of Glory Styles --- */
        .degree-circle {
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            text-shadow: 1px 1px 3px rgba(0,0,0,0.5);
            flex-shrink: 0;
        }
        .celestial {
            background: radial-gradient(ellipse at center, #ffffff 0%, #f0f9ff 40%, #bae6fd 100%);
            box-shadow: 0 0 50px 15px #fff, 0 0 80px 30px #7dd3fc, 0 0 120px 50px #0ea5e9;
        }
        .terrestrial {
            background: radial-gradient(ellipse at center, #f0f9ff 0%, #e0f2fe 40%, #7dd3fc 100%);
            box-shadow: 0 0 35px 12px #e0f2fe, 0 0 60px 25px #38bdf8;
        }
        .telestial {
            background: radial-gradient(ellipse at center, #e0f2fe 0%, #cffafe 40%, #22d3ee 100%);
            box-shadow: 0 0 20px 8px #cffafe, 0 0 35px 15px #67e8f9;
        }
        .outer-darkness-circle {
            background: #1e293b;
            box-shadow: 0 0 15px 5px #475569;
        }
    </style>
</head>
<body class="bg-slate-100 flex items-center justify-center min-h-screen p-2 sm:p-4">

    <main class="w-full max-w-4xl mx-auto bg-white rounded-2xl shadow-2xl p-4 sm:p-6 md:p-10">
        <header class="text-center mb-4">
            <h1 class="text-3xl sm:text-4xl md:text-5xl font-bold text-slate-800 title-font">The Plan of Salvation</h1>
            <p class="text-slate-600 mt-2 text-sm sm:text-base">A Journey of Progression and Hope</p>
        </header>

        <div id="path-container" class="path-container mb-4">
            <!-- Path segments, points, and labels are generated by JS -->
            <div id="person-icon">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-full h-full">
                  <path fill-rule="evenodd" d="M7.5 6a4.5 4.5 0 1 1 9 0 4.5 4.5 0 0 1-9 0ZM3.751 20.105a8.25 8.25 0 0 1 16.498 0 .75.75 0 0 1-.437.695A18.683 18.683 0 0 1 12 22.5c-2.786 0-5.433-.608-7.812-1.7a.75.75 0 0 1-.437-.695Z" clip-rule="evenodd" />
                </svg>
            </div>
        </div>

        <div id="info-container" class="relative w-full min-h-[420px]">
            <!-- Stage Cards will be injected here -->
        </div>

        <div class="flex justify-between items-center mt-6 pt-6 border-t border-slate-200">
            <button id="prev-btn" class="bg-slate-200 text-slate-700 font-bold py-2 px-5 sm:px-6 rounded-lg hover:bg-slate-300 transition-colors disabled:opacity-50 disabled:cursor-not-allowed">Previous</button>
            <span id="step-counter" class="text-xs sm:text-sm text-slate-500 font-medium"></span>
            <button id="next-btn" class="bg-sky-500 text-white font-bold py-2 px-5 sm:px-6 rounded-lg hover:bg-sky-600 transition-colors disabled:opacity-50 disabled:cursor-not-allowed">Next</button>
        </div>
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const stages = [
                 { title: "Pre-Mortal Existence", description: "Before we were born, we lived as spirits with God. In a great Council, He presented His plan for us to progress. We chose to follow it.", christsRole: "Jesus Christ, then Jehovah, was chosen to be our Savior. He volunteered to make the Father's plan possible, allowing us to overcome sin and death.", position: 10, icon: `<svg class="stage-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 15a4 4 0 004 4h9a5 5 0 10-.1-9.999 5.002 5.002 0 10-9.78 2.096A4.001 4.001 0 003 15z"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 11.5l.01 0m-3.51 1.5l.01 0m6.99 0l.01 0"></path></svg>` },
                { title: "The Veil & Birth", description: "We passed through a 'veil,' forgetting our past life to learn to walk by faith. We were born into mortal bodies, a critical step to gain experience.", christsRole: "Under the Father's direction, Christ created the earth. His creative act provided the 'schoolroom' for our mortal probation.", position: 20, icon: `<svg class="stage-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.5 4H8.5a2 2 0 00-2 2v12a2 2 0 002 2h7a2 2 0 002-2V6a2 2 0 00-2-2zM12 4v16"></path></svg>` },
                { title: "Mortal Life", description: "Earth life is a time of testing and experience. We learn to choose good from evil, develop divine attributes, and prepare to return to God.", christsRole: "Through His teachings, example, and Atoning sacrifice, Christ shows us how to live. His Atonement allows for repentance and gives us strength in trials.", position: 30, icon: `<svg class="stage-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2h8a2 2 0 002-2v-1a2 2 0 012-2h1.945M7.75 4a9 9 0 0110.5 0m-10.5 0a9 9 0 0010.5 0M7.75 4c-2.094 2.026-3.75 4.73-3.75 7.5a9.04 9.04 0 003.75 7.5m10.5-15c2.094 2.026 3.75 4.73 3.75 7.5a9.04 9.04 0 01-3.75 7.5"></path></svg>` },
                { title: "Death & Spirit World", description: "At death, our spirit separates from our body and goes to the Spirit World. The gospel is preached to all there, giving everyone a chance to accept it.", christsRole: "Christ's death and resurrection opened the doors of the Spirit World. He organized the work of salvation there, ensuring all can hear His message.", position: 40, icon: `<svg class="stage-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10zM12 6v6l4 2"></path><path d="M12 12H8" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path></svg>` },
                { title: "Resurrection", description: "Resurrection is the reuniting of our spirit and body, now perfected and immortal. This is a free gift to every person who has ever lived.", christsRole: "Christ was the first to be resurrected, breaking the bands of death for all mankind. His victory over death makes our own resurrection possible.", position: 50, icon: `<svg class="stage-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5 10l7-7m0 0l7 7m-7-7v18"></path></svg>` },
                { title: "Final Judgment", description: "After resurrection, we will stand before God to be judged according to our works and the desires of our hearts. This judgment will be perfectly fair and merciful.", christsRole: "Jesus Christ is our Judge and Advocate. Because He understands us perfectly, He judges with mercy, balancing justice with His infinite love.", position: 60, icon: `<svg class="stage-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3"></path></svg>` },
                { title: "The Three Degrees of Glory", description: "After judgment, we inherit a place in a kingdom of glory. These kingdoms—Celestial, Terrestrial, and Telestial—differ in glory, like the sun, moon, and stars.", christsRole: "It is through Christ's Atonement that any kingdom of glory is attainable. He is the gatekeeper, and by His grace we are saved after all we can do.", position: 75, isGlory: true }, // Increased spacing
                { title: "Outer Darkness", description: "This is not a kingdom of glory, but a state of eternal misery. It is reserved for the very few who gain a perfect knowledge and then willfully deny the Holy Ghost and defy God.", christsRole: "Christ's Atonement cannot save those who, with full knowledge, choose to permanently reject it. Their choice places them outside the bounds of His mercy.", position: 90, isOuterDarkness: true }
            ];

            let currentStage = 0;
            const infoContainer = document.getElementById('info-container');
            const pathContainer = document.getElementById('path-container');
            const personIcon = document.getElementById('person-icon');
            const prevBtn = document.getElementById('prev-btn');
            const nextBtn = document.getElementById('next-btn');
            const stepCounter = document.getElementById('step-counter');

            function initialize() {
                drawTimeline();
                stages.forEach(stage => {
                    const card = createCard(stage);
                    infoContainer.appendChild(card);
                });
                updateUI();
            }

            function drawTimeline() {
                const pathPositions = [];

                // First, create all the points and labels
                stages.forEach((stage, index) => {
                    const isDown = index % 2 === 0;
                    const posClass = isDown ? 'pos-down' : 'pos-up';
                    const yPos = isDown ? 120 : 60;

                    // Create Point
                    const point = document.createElement('div');
                    point.className = `stage-point ${posClass}`;
                    point.style.left = `${stage.position}%`;
                    pathContainer.appendChild(point);
                    pathPositions.push({ x: stage.position, y: yPos });

                    // Create Label
                    const label = document.createElement('div');
                    label.className = `stage-label ${posClass}`;
                    label.style.left = `${stage.position}%`;
                    label.textContent = stage.title;
                    pathContainer.appendChild(label);
                });

                // Then, create the connecting line segments
                for (let i = 0; i < pathPositions.length - 1; i++) {
                    const start = pathPositions[i];
                    const end = pathPositions[i+1];
                    
                    // Calculate properties for the line segment
                    const deltaX = (end.x - start.x) * pathContainer.offsetWidth / 100;
                    const deltaY = end.y - start.y;
                    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);
                    const angle = Math.atan2(deltaY, deltaX) * (180 / Math.PI);

                    // Create Segment Div
                    const segment = document.createElement('div');
                    segment.className = 'path-segment';
                    segment.style.left = `${start.x}%`;
                    segment.style.top = `${start.y}px`;
                    segment.style.width = `${distance}px`;
                    segment.style.transformOrigin = 'left center';
                    segment.style.transform = `rotate(${angle}deg)`;
                    pathContainer.appendChild(segment);
                }
            }
            
            function createCard(stage) {
                const card = document.createElement('div');
                card.className = 'stage-card';

                let contentHTML = '';
                if (stage.isGlory) {
                    contentHTML = `
                        <div class="p-2 sm:p-4 bg-slate-50 rounded-lg border border-slate-200">
                            <h2 class="text-xl sm:text-2xl font-bold text-slate-800 title-font mb-4 text-center">${stage.title}</h2>
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-6 text-center mb-6">
                                <div class="flex flex-col items-center p-2">
                                    <div class="w-24 h-24 degree-circle celestial mb-3"></div>
                                    <h3 class="font-bold text-base sm:text-lg text-slate-700">Celestial</h3>
                                    <p class="text-xs text-slate-500">Glory of the Sun. Live with God. For those who accept and live the full gospel.</p>
                                </div>
                                <div class="flex flex-col items-center p-2">
                                    <div class="w-24 h-24 degree-circle terrestrial mb-3"></div>
                                    <h3 class="font-bold text-base sm:text-lg text-slate-700">Terrestrial</h3>
                                    <p class="text-xs text-slate-500">Glory of the Moon. For good, honorable people not valiant in the testimony of Jesus.</p>
                                </div>
                                <div class="flex flex-col items-center p-2">
                                    <div class="w-24 h-24 degree-circle telestial mb-3"></div>
                                    <h3 class="font-bold text-base sm:text-lg text-slate-700">Telestial</h3>
                                    <p class="text-xs text-slate-500">Glory of the Stars. For those who chose wickedness but ultimately accept Christ.</p>
                                </div>
                            </div>
                            <div class="mt-6 pt-6 border-t border-slate-200">
                                <h3 class="font-bold text-lg text-slate-700 title-font text-center mb-3">Within the Celestial Kingdom</h3>
                                <p class="text-slate-600 text-sm sm:text-base mb-4 text-center max-w-2xl mx-auto">The highest degree of the Celestial Kingdom is where we can live with Heavenly Father and become like Him, a state called exaltation or eternal life. This requires making and keeping sacred covenants through priesthood ordinances, including celestial marriage.</p>
                            </div>
                             <p class="text-sky-700 bg-sky-100 p-3 rounded-md text-sm sm:text-base mt-4"><strong class="font-semibold">Christ's Role:</strong> ${stage.christsRole}</p>
                        </div>`;
                } else if (stage.isOuterDarkness) {
                    contentHTML = `
                        <div class="p-4 sm:p-6 bg-slate-800 text-slate-300 rounded-lg border border-slate-700 flex flex-col items-center text-center">
                            <div class="w-24 h-24 degree-circle outer-darkness-circle mb-4"></div>
                            <h2 class="text-xl sm:text-2xl font-bold text-white title-font mb-2">${stage.title}</h2>
                            <p class="mb-4 text-sm sm:text-base">${stage.description}</p>
                            <p class="text-slate-300 bg-slate-700 p-4 rounded-md w-full"><strong class="font-semibold text-white">Christ's Role:</strong> ${stage.christsRole}</p>
                        </div>`;
                } else {
                    contentHTML = `
                        <div class="p-4 sm:p-6 bg-slate-50 rounded-lg border border-slate-200 flex flex-col items-center text-center">
                            ${stage.icon}
                            <h2 class="text-xl sm:text-2xl font-bold text-slate-800 title-font mb-2">${stage.title}</h2>
                            <p class="text-slate-600 mb-4 text-sm sm:text-base">${stage.description}</p>
                            <p class="text-sky-700 bg-sky-100 p-4 rounded-md w-full"><strong class="font-semibold">Christ's Role:</strong> ${stage.christsRole}</p>
                        </div>`;
                }
                card.innerHTML = contentHTML;
                return card;
            }

            function updateUI() {
                const stage = stages[currentStage];
                const personShouldMove = !stage.isOuterDarkness;

                if (personShouldMove) {
                    const isDown = currentStage % 2 === 0;
                    personIcon.className = isDown ? 'pos-down' : 'pos-up';
                    personIcon.style.left = `${stage.position}%`;
                }
                
                document.querySelectorAll('.stage-point').forEach((point, index) => {
                    point.classList.toggle('active', index === currentStage);
                });

                document.querySelectorAll('.stage-card').forEach((card, index) => {
                    card.classList.toggle('active', index === currentStage);
                });

                prevBtn.disabled = currentStage === 0;
                nextBtn.disabled = currentStage === stages.length - 1;
                
                stepCounter.textContent = `Step ${currentStage + 1} of ${stages.length}`;
            }

            prevBtn.addEventListener('click', () => {
                if (currentStage > 0) {
                    currentStage--;
                    updateUI();
                }
            });

            nextBtn.addEventListener('click', () => {
                if (currentStage < stages.length - 1) {
                    currentStage++;
                    updateUI();
                }
            });

            // Redraw timeline on window resize to keep it accurate
            window.addEventListener('resize', drawTimeline);

            initialize();
        });
    </script>
</body>
</html>
